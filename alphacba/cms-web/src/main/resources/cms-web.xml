<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	         http://www.springframework.org/schema/lang
	         http://www.springframework.org/schema/lang/spring-lang-4.2.xsd      
	         http://www.springframework.org/schema/tx   
	         http://www.springframework.org/schema/tx/spring-tx-4.2.xsd    
	         http://www.springframework.org/schema/aop     
	         http://www.springframework.org/schema/aop/spring-aop-4.2.xsd    
	         http://www.springframework.org/schema/mvc     
	         http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd   
	         http://www.springframework.org/schema/context     
	         http://www.springframework.org/schema/context/spring-context-4.2.xsd
	         http://www.springframework.org/schema/cache
	         http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
	         http://www.springframework.org/schema/task 
	         http://www.springframework.org/schema/task/spring-task-4.2.xsd">

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="ke.alphacba.cms.web"></context:component-scan>
	
	<mvc:annotation-driven />
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
           <value>classpath:cms-web.properties</value>
		</property>
	</bean>

	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/assets/" mapping="/assets/**"/>
	<mvc:resources location="/data/" mapping="/data/**"/>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="ke.alphacba.cms.web.filter.GlobalInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- FreeMarker的配置 -->
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="/WEB-INF/views/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean>

	<!-- 配置 FreeMarker视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
		<property name="cache" value="false" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	<!-- 图片上传的配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 最大值4M -->
		<property name="maxUploadSize" value="209715200" />
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 登陆时验证码的配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<!--通过构造函数注入属性值 -->
				<constructor-arg type="java.util.Properties">
					<props>
						<!-- 验证码宽度 -->
						<prop key="kaptcha.image.width">150</prop>
						<!-- 验证码高度 -->
						<prop key="kaptcha.image.height">60</prop>
						<!-- 生成验证码内容范围 -->
						<prop key="kaptcha.textproducer.char.string">abcde2345678gfynmnpwx</prop>
						<!-- 验证码个数 -->
						<prop key="kaptcha.textproducer.char.length">5</prop>
						<!-- 是否有边框 -->
						<prop key="kaptcha.border">no</prop>
						<!-- 验证码字体颜色 -->
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<!-- 验证码字体大小 -->
						<prop key="kaptcha.textproducer.font.size">35</prop>
						<!-- 验证码所属字体样式 -->
						<prop key="kaptcha.textproducer.font.names">Arial, Courier</prop>
						<prop key="kaptcha.background.clear.from">white</prop>
						<prop key="kaptcha.background.clear.to">white</prop>
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
						<!-- 干扰线颜色 -->
						<prop key="kaptcha.noise.color">red</prop>
						<!-- 验证码文本字符间距 -->
						<prop key="kaptcha.textproducer.char.space">4</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<bean id="iCMSServiceRpc"  
        class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">  
        <property name="serviceUrl" value="http://localhost:8100/cms-service/remoteservice" />  
        <property name="serviceInterface" value="ke.alphacba.cms.core.rpc.CMSServiceRpc" />  
    </bean> 
    
    <!-- <bean id="redisConnector" class="ke.alphacba.cms.core.cache.RedisConnecter" destroy-method="close">
    	<property name="redisHost">
    		<value>${redis.host}</value>
    	</property>
    	<property name="redisPort">
    		<value>${redis.port}</value>
    	</property>
    	<property name="redisPass">
    		<value>${redis.pass}</value>
    	</property>
    	<property name="redisMaxIdle">
    		<value>${redis.maxIdle}</value>
    	</property>
    	<property name="redisTestOnBorrow">
    		<value>${redis.testOnBorrow}</value>
    	</property>
    </bean> -->
	
	<bean id="sysCacheService" class="ke.alphacba.cms.core.cache.SysCacheServiceImpl">
		<constructor-arg>
			<ref bean="connectionFactory" />
		</constructor-arg>
	</bean>
	
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="testWhileIdle" value="${redis.testOnBorrow}" />  
    </bean>  
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="poolConfig"/>  
      
    <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory" />  
    </bean>  -->
    
</beans>
